{"ref":"cf113b67-14d4-4197-86d1-1e7b1adf3f5c","content":"{\"version\":1,\"machineId\":\"366119d7-eb88-4901-b08a-e1c37dd29a61\",\"content\":\"{\\\"cp-snippet.code-snippets\\\":\\\"\\\\n{\\\\n    \\\\\\\"CP Snippet\\\\\\\": {\\\\n        \\\\\\\"prefix\\\\\\\": \\\\\\\"cpp\\\\\\\",\\\\n        \\\\\\\"body\\\\\\\": [\\\\n          \\\\\\\"#pragma GCC optimize(\\\\\\\\\\\\\\\"Ofast\\\\\\\\\\\\\\\")\\\\\\\",\\\\n          \\\\\\\"#pragma GCC target(\\\\\\\\\\\\\\\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\\\\\\\\\\\\\\\")\\\\\\\",\\\\n          \\\\\\\"#pragma GCC optimize(\\\\\\\\\\\\\\\"unroll-loops\\\\\\\\\\\\\\\")\\\\\\\",\\\\n          \\\\\\\"#include <bits/stdc++.h>  \\\\\\\",\\\\n          \\\\\\\"#include <complex>\\\\\\\",\\\\n          \\\\\\\"#include <queue>\\\\\\\",\\\\n          \\\\\\\"#include <set>\\\\\\\",\\\\n          \\\\\\\"#include <unordered_set>\\\\\\\",\\\\n          \\\\\\\"#include <list>\\\\\\\",\\\\n          \\\\\\\"#include <chrono>\\\\\\\",\\\\n          \\\\\\\"#include <random>\\\\\\\",\\\\n          \\\\\\\"#include <iostream>\\\\\\\",\\\\n          \\\\\\\"#include <algorithm>\\\\\\\",\\\\n          \\\\\\\"#include <cmath>\\\\\\\",\\\\n          \\\\\\\"#include <string>\\\\\\\",\\\\n          \\\\\\\"#include <vector>\\\\\\\",\\\\n          \\\\\\\"#include <map>\\\\\\\",\\\\n          \\\\\\\"#include <unordered_map>\\\\\\\",\\\\n          \\\\\\\"#include <stack>\\\\\\\",\\\\n          \\\\\\\"#include <iomanip>\\\\\\\",\\\\n          \\\\\\\"#include <fstream>\\\\\\\",\\\\n          \\\\\\\" \\\\\\\",\\\\n          \\\\\\\"using namespace std;\\\\\\\",\\\\n          \\\\\\\" \\\\\\\",\\\\n          \\\\\\\"typedef long long ll;\\\\\\\",\\\\n          \\\\\\\"typedef long double ld;\\\\\\\",\\\\n          \\\\\\\"typedef pair<int,int> p32;\\\\\\\",\\\\n          \\\\\\\"typedef pair<ll,ll> p64;\\\\\\\",\\\\n          \\\\\\\"typedef pair<double,double> pdd;\\\\\\\",\\\\n          \\\\\\\"typedef vector<ll> v64;\\\\\\\",\\\\n          \\\\\\\"typedef vector<int> v32;\\\\\\\",\\\\n          \\\\\\\"typedef vector<vector<int> > vv32;\\\\\\\",\\\\n          \\\\\\\"typedef vector<vector<ll> > vv64;\\\\\\\",\\\\n          \\\\\\\"typedef vector<vector<p64> > vvp64;\\\\\\\",\\\\n          \\\\\\\"typedef vector<p64> vp64;\\\\\\\",\\\\n          \\\\\\\"typedef vector<p32> vp32;\\\\\\\",\\\\n          \\\\\\\"ll MOD = 998244353;\\\\\\\",\\\\n          \\\\\\\"double eps = 1e-12;\\\\\\\",\\\\n          \\\\\\\"#define forn(i,e) for(ll i = 0; i < e; i++)\\\\\\\",\\\\n          \\\\\\\"#define forsn(i,s,e) for(ll i = s; i < e; i++)\\\\\\\",\\\\n          \\\\\\\"#define rforn(i,s) for(ll i = s; i >= 0; i--)\\\\\\\",\\\\n          \\\\\\\"#define rforsn(i,s,e) for(ll i = s; i >= e; i--)\\\\\\\",\\\\n          \\\\\\\"#define ln \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"\\\\\\\",\\\\n          \\\\\\\"#define dbg(x) cout<<#x<<\\\\\\\\\\\\\\\" = \\\\\\\\\\\\\\\"<<x<<ln\\\\\\\",\\\\n          \\\\\\\"#define mp make_pair\\\\\\\",\\\\n          \\\\\\\"#define pb push_back\\\\\\\",\\\\n          \\\\\\\"#define fi first\\\\\\\",\\\\n          \\\\\\\"#define se second\\\\\\\",\\\\n          \\\\\\\"#define INF 2e18\\\\\\\",\\\\n          \\\\\\\"#define fast_cin() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)\\\\\\\",\\\\n          \\\\\\\"#define all(x) (x).begin(), (x).end()\\\\\\\",\\\\n          \\\\\\\"#define sz(x) ((ll)(x).size())\\\\\\\",\\\\n          \\\\\\\" \\\\\\\",\\\\n          \\\\\\\"\\\\\\\",\\\\n          \\\\\\\"void solve(){\\\\\\\",\\\\n          \\\\\\\"}\\\\\\\",\\\\n          \\\\\\\"int main()\\\\\\\",\\\\n          \\\\\\\"{\\\\\\\",\\\\n          \\\\\\\"    fast_cin();\\\\\\\",\\\\n          \\\\\\\"    ll t;\\\\\\\",\\\\n          \\\\\\\"    cin >> t;\\\\\\\",\\\\n          \\\\\\\"    for(int it=1;it<=t;it++) {\\\\\\\",\\\\n          \\\\\\\"     cout << \\\\\\\\\\\\\\\"Case #\\\\\\\\\\\\\\\" << it+1 << \\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\";\\\\\\\",\\\\n          \\\\\\\"        solve();\\\\\\\",\\\\n          \\\\\\\"    }\\\\\\\",\\\\n          \\\\\\\"    return 0;\\\\\\\",\\\\n          \\\\\\\"}\\\\\\\"\\\\n        ],\\\\n        \\\\\\\"description\\\\\\\": \\\\\\\"CP Snippet\\\\\\\"\\\\n      }\\\\n}\\\",\\\"cpp.json\\\":\\\"{\\\\n\\\\t// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and \\\\n\\\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\\\n\\\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\\\n\\\\t// same ids are connected.\\\\n\\\\t// Example:\\\\n\\\\t// \\\\\\\"Print to console\\\\\\\": {\\\\n\\\\t// \\\\t\\\\\\\"prefix\\\\\\\": \\\\\\\"log\\\\\\\",\\\\n\\\\t// \\\\t\\\\\\\"body\\\\\\\": [\\\\n\\\\t// \\\\t\\\\t\\\\\\\"console.log('$1');\\\\\\\",\\\\n\\\\t// \\\\t\\\\t\\\\\\\"$2\\\\\\\"\\\\n\\\\t// \\\\t],\\\\n\\\\t// \\\\t\\\\\\\"description\\\\\\\": \\\\\\\"Log output to console\\\\\\\"\\\\n\\\\t// }\\\\n}\\\"}\"}"}